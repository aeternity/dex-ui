name: Staging Dex UI Pipeline

on:
  pull_request:
    branches: [ main ]
    types: [ opened, closed ]

env:
  PR_NUMBER: ${{ github.event.pull_request.number }}
  ENV: "stg"
  APP: "dex-ui"

jobs:
  main:
    runs-on: ubuntu-latest    
    name: Web build docker
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Log in to dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Extract metadata for docker
        if: github.event_name == 'pull_request' && github.event.action == 'opened' || github.event.action == 'synchronize'
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: aeternity/dex-ui
          tags: |
            type=raw,value=latest,enable=${{ endsWith(GitHub.ref, 'main') }}
            type=ref,event=tag
            type=ref,event=pr
      
      - name: Build and push docker image
        if: github.event_name == 'pull_request' && github.event.action == 'opened' || github.event.action == 'synchronize'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - uses: actions/checkout@v2
        with:
          repository: aeternity/gitops-apps.git
          ref: staging
          persist-credentials: false
          fetch-depth: 0

      - name: Staging deploy
        if: github.event_name == 'pull_request' && github.event.action == 'opened' || github.event.action == 'synchronize'
        uses: aeternity/ae-github-actions/argocd-deploy@v1
        with:
          url-prefix: pr-${{ env.PR_NUMBER }}
          env: ${{ env.ENV }}
          app: ${{ env.APP }}

      - name: Staging undeploy
        if: github.event_name == 'pull_request' && github.event.action == 'closed'
        uses: aeternity/ae-github-actions/argocd-undeploy@v1
        with:
          url-prefix: pr-${{ env.PR_NUMBER }}
          env: ${{ env.ENV }}
          app: ${{ env.APP }}

      - name: Print PR url
        uses: unsplash/comment-on-pr@v1.3.0
        if: github.event_name == 'pull_request' && github.event.action == 'opened' || github.event.action == 'synchronize'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: Deployed to https://pr-${{ env.PR_NUMBER }}-${{ env.APP }}.${{ env.ENV }}.aepps.com
          check_for_duplicate_msg: true

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          repository: aeternity/gitops-apps
          github_token: ${{ secrets.BOT_GITHUB_TOKEN }}
          branch: staging
